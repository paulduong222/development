package gov.nwcg.isuite.core.persistence.hibernate.query;

/**
 * Contains core, inner SQL query parts for GlidePath report. 
 */
public class GlidePathReportQueryInner {

	public static final StringBuffer INNER_SQL_PG = new StringBuffer();
	public static final StringBuffer INNER_SQL_ORACLE = new StringBuffer();
	
	public static final String SQL_MARKER_FOR_INCIDENT_SPECIFIC_CLAUSE = "#{INCIDENT_SPECIFIC_CLAUSE}";
	public static final String SQL_MARKER_FOR_KIND_CODE_CLAUSE = "#{KIND_CODE_CLAUSE}";
	public static final String SQL_MARKER_FOR_DATE_RANGE_CLAUSE = "#{DATE_RANGE_CLAUSE}";

	// NOTE:::::::::::::::::::::::::::::::::::::
	// Following query uses an external wrapper table because Postgre won't allow alias columns like 'first_work_date' 
	// to be referred to in the WHERE clause. Oracle will work without wrapper table, but making queries similar 
	// for uniformity.
	
	static {
		INNER_SQL_PG.append("SELECT wrapper.*  FROM ( ")
					.append("SELECT a.request_number,")
					.append("        CASE")
					.append("            WHEN r.is_person = TRUE THEN (r.last_name ||")
					.append("            CASE")
					.append("                WHEN r.first_name IS NULL THEN ''")
					.append("                ELSE ', ' || r.first_name")
					.append("            END)")
					.append("            ELSE r.resource_name")
					.append("        END AS resource_name,")
					.append("    CAST(wp.ci_first_work_date AS DATE) AS first_work_date,")
					.append("    wp.ci_length_at_assignment AS length_at_assignment,")
					.append("    CAST(wp.ci_first_work_date + CAST('1 day' AS interval day) * CAST(wp.ci_length_at_assignment AS DOUBLE PRECISION) AS DATE) AS demob_date,")
					.append("        CASE")
					.append("            WHEN r.is_person = TRUE THEN 'Y'")
					.append("            ELSE 'N'")
					.append("        END AS is_person,")
					.append("        CASE")
					.append("            WHEN r.parent_resource_id IS NULL THEN 'Y'")
					.append("            ELSE 'N'")
					.append("        END AS is_level_1,")
					.append("    k.code AS kind_code,")
					.append("        CASE")
					.append("            WHEN k.is_line_overhead = TRUE THEN 'Y'")
					.append("            ELSE 'N'")
					.append("        END AS is_line_overhead,")
					.append("        CASE")
					.append("            WHEN k.is_strike_team = TRUE THEN 'Y'")
					.append("            ELSE 'N'")
					.append("        END AS is_strike_team,")
					.append("        CASE")
					.append("            WHEN r.parent_resource_id IS NULL THEN 'N'")
					.append("            ELSE innerparent.is_strike_team")
					.append("        END AS is_component_of_strike_team,")
					.append("    r.parent_resource_id,")
					.append("        CASE")
					.append("            WHEN k.is_standard = TRUE THEN 'Y'")
					.append("            ELSE 'N'")
					.append("        END AS kind_code_is_standard,")
					.append("    k.incident_id AS kind_code_incident_id,")
					.append("    k.incident_group_id AS kind_code_incident_group_id,")
					.append("    dep.code AS department_code,")
					.append("    gc.code AS group_category_code, ")
					.append("    sgc.code AS sub_group_category_code,")
					.append("        CASE")
					.append("            WHEN sgc.is_standard = TRUE THEN 'Y'")
					.append("            ELSE 'N'")
					.append("        END AS sub_group_category_is_standard,")
					.append("    sgc.incident_id AS sub_group_category_inc_id,")
					.append("    sgc.incident_group_id AS sub_group_category_incgrp_id")
					.append("   FROM isw_incident i")
					.append("   LEFT JOIN isw_incident_resource ir ON ir.incident_id = i.id")
					.append("   LEFT JOIN isw_resource r ON r.id = ir.resource_id")
					.append("   LEFT JOIN ( SELECT")
					.append("        CASE")
					.append("            WHEN k2.is_strike_team = TRUE THEN 'Y'")
					.append("            ELSE 'N'")
					.append("        END AS is_strike_team, r2.id")
					.append("        FROM isw_resource r2, isw_incident_resource ir2, isw_work_period wp2, ")
					.append("             isw_work_period_assignment wpa2, isw_assignment a2, iswl_kind k2")
					.append("        WHERE ir2.resource_id = r2.id " )
					.append("              AND wp2.incident_resource_id = ir2.id " )
					.append("              AND wpa2.work_period_id = wp2.id " )
					.append("              AND a2.id = wpa2.assignment_id " )
					.append("              AND a2.end_date IS NULL " )
					.append("              AND k2.id = a2.kind_id" )
					.append("   ) innerparent ON r.parent_resource_id = innerparent.id")
					.append("   LEFT JOIN isw_work_period wp ON wp.incident_resource_id = ir.id")
					.append("   LEFT JOIN isw_work_period_assignment wpa ON wpa.work_period_id = wp.id")
					.append("   LEFT JOIN isw_assignment a ON a.id = wpa.assignment_id")
					.append("   LEFT JOIN iswl_kind k ON k.id = a.kind_id")
					.append("   LEFT JOIN iswl_department dep ON dep.id = k.department_id")
					.append("   LEFT JOIN iswl_group_category gc ON gc.id = k.group_category_id")
					.append("   LEFT JOIN iswl_sub_group_category sgc ON sgc.id = k.sub_group_category_id")
					.append("   LEFT JOIN isw_incident_group_incident igi ON igi.incident_id = i.id")
					.append("   LEFT JOIN isw_incident_group ig ON ig.id = igi.incident_group_id")
					.append("  WHERE ")
					.append(SQL_MARKER_FOR_INCIDENT_SPECIFIC_CLAUSE)
					//.append("--  i.id = 10000 AND")
					//.append("-- igi.incident_group_id = 1 AND")
					.append("  AND (a.assignment_status = 'C' OR a.assignment_status = 'P') ")
					.append("  AND wp.ci_first_work_date IS NOT NULL ")
					.append("  AND wp.ci_length_at_assignment IS NOT NULL ")
					.append("  AND wp.ci_length_at_assignment > 0 ")
					.append("  AND r.is_enabled = TRUE ")
					.append("  AND k.is_active = 'Y' ")
					.append("  AND gc.is_active = 'Y' ")
					.append("  AND sgc.is_active = 'Y'")
					.append(" ) AS wrapper ") 							// End of wrapper table
					.append("  WHERE " + SQL_MARKER_FOR_KIND_CODE_CLAUSE)
					.append("  AND " + SQL_MARKER_FOR_DATE_RANGE_CLAUSE);
		
		INNER_SQL_ORACLE.append("SELECT * FROM ( ")
					.append("SELECT a.request_number,")
					.append("        CASE")
					.append("            WHEN r.is_person = 1 THEN (r.last_name ||")
					.append("            CASE")
					.append("                WHEN r.first_name IS NULL THEN ''")
					.append("                ELSE ', ' || r.first_name")
					.append("            END)")
					.append("            ELSE r.resource_name")
					.append("        END AS resource_name,")
					.append("    TO_DATE (TO_CHAR (wp.ci_first_work_date, 'YYYY-MM-DD HH24:MI:SS'),  'YYYY-MM-DD HH24:MI:SS') AS first_work_date, ")
					.append("    wp.ci_length_at_assignment AS length_at_assignment,")
					.append("    (wp.ci_first_work_date + wp.ci_length_at_assignment) AS demob_date,")
					.append("        CASE")
					.append("            WHEN r.is_person = 1 THEN 'Y'")
					.append("            ELSE 'N'")
					.append("        END AS is_person,")
					.append("        CASE")
					.append("            WHEN r.parent_resource_id IS NULL THEN 'Y'")
					.append("            ELSE 'N'")
					.append("        END AS is_level_1,")
					.append("    k.code AS kind_code,")
					.append("        CASE")
					.append("            WHEN k.is_line_overhead = 1 THEN 'Y'")
					.append("            ELSE 'N'")
					.append("        END AS is_line_overhead,")
					.append("        CASE")
					.append("            WHEN k.is_strike_team = 1 THEN 'Y'")
					.append("            ELSE 'N'")
					.append("        END AS is_strike_team,")
					.append("        CASE")
					.append("            WHEN r.parent_resource_id IS NULL THEN 'N'")
					.append("            ELSE innerparent.is_strike_team")
					.append("        END AS is_component_of_strike_team,")
					.append("    r.parent_resource_id,")
					.append("        CASE")
					.append("            WHEN k.is_standard = 1 THEN 'Y'")
					.append("            ELSE 'N'")
					.append("        END AS kind_code_is_standard,")
					.append("    k.incident_id AS kind_code_incident_id,")
					.append("    k.incident_group_id AS kind_code_incident_group_id,")
					.append("    dep.code AS department_code,")
					.append("    gc.code AS group_category_code, ")
					.append("    sgc.code AS sub_group_category_code,")
					.append("        CASE")
					.append("            WHEN sgc.is_standard = 1 THEN 'Y'")
					.append("            ELSE 'N'")
					.append("        END AS sub_group_category_is_standard,")
					.append("    sgc.incident_id AS sub_group_category_inc_id,")
					.append("    sgc.incident_group_id AS sub_group_category_incgrp_id")
					.append("   FROM isw_incident i")
					.append("   LEFT JOIN isw_incident_resource ir ON ir.incident_id = i.id")
					.append("   LEFT JOIN isw_resource r ON r.id = ir.resource_id")
					.append("   LEFT JOIN ( SELECT")
					.append("        CASE")
					.append("            WHEN k2.is_strike_team = 1 THEN 'Y'")
					.append("            ELSE 'N'")
					.append("        END AS is_strike_team, r2.id")
					.append("        FROM isw_resource r2, isw_incident_resource ir2, isw_work_period wp2, ")
					.append("             isw_work_period_assignment wpa2, isw_assignment a2, iswl_kind k2")
					.append("        WHERE ir2.resource_id = r2.id " )
					.append("              AND wp2.incident_resource_id = ir2.id " )
					.append("              AND wpa2.work_period_id = wp2.id " )
					.append("              AND a2.id = wpa2.assignment_id " )
					.append("              AND a2.end_date IS NULL " )
					.append("              AND k2.id = a2.kind_id" )
					.append("   ) innerparent ON r.parent_resource_id = innerparent.id")
					.append("   LEFT JOIN isw_work_period wp ON wp.incident_resource_id = ir.id")
					.append("   LEFT JOIN isw_work_period_assignment wpa ON wpa.work_period_id = wp.id")
					.append("   LEFT JOIN isw_assignment a ON a.id = wpa.assignment_id")
					.append("   LEFT JOIN iswl_kind k ON k.id = a.kind_id")
					.append("   LEFT JOIN iswl_department dep ON dep.id = k.department_id")
					.append("   LEFT JOIN iswl_group_category gc ON gc.id = k.group_category_id")
					.append("   LEFT JOIN iswl_sub_group_category sgc ON sgc.id = k.sub_group_category_id")
					.append("   LEFT JOIN isw_incident_group_incident igi ON igi.incident_id = i.id")
					.append("   LEFT JOIN isw_incident_group ig ON ig.id = igi.incident_group_id")
					.append("  WHERE ")
					.append(SQL_MARKER_FOR_INCIDENT_SPECIFIC_CLAUSE)
					.append("  AND (a.assignment_status = 'C' OR a.assignment_status = 'P') ")
					.append("  AND wp.ci_first_work_date IS NOT NULL ")
					.append("  AND wp.ci_length_at_assignment IS NOT NULL ")
					.append("  AND wp.ci_length_at_assignment > 0 ")
					.append("  AND r.is_enabled = 1 ")
					.append("  AND k.is_active = 'Y' ")
					.append("  AND gc.is_active = 'Y' ")
					.append("  AND sgc.is_active = 'Y'")
					.append(" ) wrapper ") 				// End of wrapper table; In Oracle, do NOT put "AS wrapper"
					.append("  WHERE " + SQL_MARKER_FOR_KIND_CODE_CLAUSE)
					.append("  AND " + SQL_MARKER_FOR_DATE_RANGE_CLAUSE);
	}
}
